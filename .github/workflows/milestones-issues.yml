name: "Comprueba hitos"
on:
  pull_request:
    paths:
      - 'proyectos.md'

jobs:
  test-milestones:
    runs-on: ubuntu-latest
    steps:
      - name: Extrae URL del repositorio del diff
        uses: JJ/github-pr-contains-action@releases/v2
        with:
          github-token: ${{github.token}}
          filesChanged: 1
          linesChanged: 1
      - name: Comprueba hitos e issues
        uses: JJ/repo-in-diff-gh-action@releases/v1
        with:
          github-token: ${{github.token}}
          minVersion: "5.0.0"
          minPRs: 1
          minMilestones: 1
      - name: Comprueba variables.
        run:
          echo $version
          echo $user
          echo $repo
          echo $diff
      - name: Comprueba que exista el tablero y el wiki
        uses: actions/github-script@v3
        if: env.version >= '1'
        with:
          github-token: ${{github.token}}
          script: |
            const user = process.env.user
            const repo = process.env.repo
            const projects = await github.request( 'GET /repos/{user}/{repo}/projects', {
               user: user,
               repo: repo,
               mediaType: {
                 previews: [
                   'inertia'
                ]
              }
            })
            if ( projects.data.length == 0 ) {
               core.setFailed("❌ Debe haber un proyecto (para el tablero)")
            } else {
               console.log( "✅ Tenemos un proyecto para el tablero ")
            }

            const repoInfo = await github.request( 'GET /repos/{user}/{repo}', {
              user: user,
              repo: repo
            })
            if (repoInfo.data.has_wiki) {
               console.log( "✅ El repo tiene un wiki ")
            } else {
               core.setFailed("❌ Debe haber al menos un wiki")
            }
      - name: Comprueba que haya una historia de usuario
        uses: actions/github-script@v3
        if: env.version >= '4'
        with:
          github-token: ${{github.token}}
          script: |
            const user = process.env.user
            const repo = process.env.repo
            const options = await github.issues.listForRepo( { owner: user, repo: repo } )
            const issues = await github.paginate( options )
            console.log( issues )
            if ( issues.length == 0 ) {
               core.setFailed("❌ Debe haber un issue con una HU al menos")
            } else {
               console.log( "✅ Parece que hay un issue ")
            }
      - name: Comprueba que haya un sistema de integración continua
        uses: actions/github-script@v3
        if: env.version >= '11'
        with:
          github-token: ${{github.token}}
          script: |
            const user = process.env.user
            const repo = process.env.repo
            const checks_before_pag =
                    await github.checks.listForRef.endpoint.merge(
                        { owner: user,
                          repo: repo,
                          ref: 'HEAD',
                          status: 'completed'
                        })
            const checks = await github.paginate( checks_before_pag)
            console.log( "✅ Hay " + checks.length + " sistemas de CI configurados")

            if ( checks.length < 1 ) {
                    core.setFailed("❌ No hay suficientes sistemas de CI configurados")
            }
      - name: Descarga el repo del estudiante
        uses: actions/checkout@v2
        with:
          repository: ${{env.user}}/${{env.repo}}
          fetch-depth: 0
      - name: Ejecuta tests en el repo
        run: |
          wget -q https://raw.githubusercontent.com/JJ/curso-tdd/master/t/proyecto.t
          prove -c proyecto.t
